@startuml

participant Dashboard
participant Client
participant K8s
participant Controller
box Workspace
participant DevWorkspaceJWTProxy
participant DevWorkspaceSecureServer
end box
participant CheDevWorkspaceAuth
participant OpenID

autonumber
skinparam SequenceGroupBodyBackgroundColor transparent

== DevWorkspace Start ==

Dashboard -> K8s: Create started DevWorkspace CR
K8s -> Controller: DevWorkspace CR is created
Controller -> Controller: Start the DevWorkspace
Controller -> Controller: Create keys for jwt token
Controller -[#blue]> DevWorkspaceJWTProxy: Inject public key into DevWorkspace
Controller -> K8s: DevWorkspace is started

== Secure Server Access ==

Client -> DevWorkspaceJWTProxy: Open secure server
DevWorkspaceJWTProxy -> DevWorkspaceJWTProxy: check if cookies are set

DevWorkspaceJWTProxy -> Client: redirects to CheDevWorkspaceAuth

Client -> CheDevWorkspaceAuth: authenticate on the DevWorkspace

group OAuth flow
CheDevWorkspaceAuth -> OpenID: authenticate user
CheDevWorkspaceAuth <- OpenID: user is authenticated
end

CheDevWorkspaceAuth -[#green]> CheDevWorkspaceAuth: read devworkspace with Cluster SA + JTW_token
CheDevWorkspaceAuth -[#green]> CheDevWorkspaceAuth: authorize user: make sure the current logged in in the same as set in DevWorkspace CR
CheDevWorkspaceAuth -[#blue]> DevWorkspaceJWTProxy: set cookies with devworkspace jwt token

CheDevWorkspaceAuth -> Client: redirects to devworkspace

Client -> DevWorkspaceJWTProxy: Open a secure server
DevWorkspaceJWTProxy -> DevWorkspaceJWTProxy: Check if cookies are set
DevWorkspaceJWTProxy -> DevWorkspaceSecureServer: proxy request
DevWorkspaceSecureServer -> Client: response

@enduml
